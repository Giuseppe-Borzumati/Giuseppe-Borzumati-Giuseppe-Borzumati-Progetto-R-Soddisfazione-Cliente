} else {
print("Le colonne necessarie per la regressione non sono presenti nei dati combinati.")
}
} else {
print("Non ci sono dati sufficienti per eseguire la PCA.")
}
# Serie storiche
if(all(c("1° data di Acquisto", "2° Data di acquisto") %in% names(analisi_storiche_1_periodo))) {
combined_data_storiche <- bind_rows(analisi_storiche_1_periodo, analisi_storica_2_periodo, .id = "Sheet")
combined_data_storiche$`1° data di Acquisto` <- as.Date(combined_data_storiche$`1° data di Acquisto`, format = "%Y-%m-%d")
combined_data_storiche$`2° Data di acquisto` <- as.Date(combined_data_storiche$`2° Data di acquisto`, format = "%Y-%m-%d")
data_long <- combined_data_storiche %>%
select(`1° data di Acquisto`, `2° Data di acquisto`, contains("Media")) %>%
gather(key = "Periodo", value = "Data", `1° data di Acquisto`, `2° Data di acquisto`) %>%
gather(key = "PC", value = "Media", contains("Media"))
ggplot(data_long, aes(x = Data, y = Media, color = PC)) +
geom_line() +
labs(title = "Soddisfazione Media nel Tempo", x = "Data", y = "Media")
} else {
print("Le colonne necessarie per l'analisi delle serie storiche non sono presenti nei dati combinati.")
}
# Cluster
if(all(c("Media PC1 nel Tempo", "Media PC2 Nel Tempo") %in% names(analisi_cluster_1_2_periodo))) {
combined_data_cluster <- analisi_cluster_1_2_periodo %>%
select(`Media PC1 nel Tempo`, `Media PC2 Nel Tempo`)
set.seed(123)
clusters <- kmeans(combined_data_cluster, centers = 3)
analisi_cluster_1_2_periodo$Cluster <- as.factor(clusters$cluster)
ggplot(analisi_cluster_1_2_periodo, aes(x = `Media PC1 nel Tempo`, y = `Media PC2 Nel Tempo`, color = Cluster)) +
geom_point(size = 3) +
labs(title = "Cluster di Clienti", x = "Media PC1 nel Tempo", y = "Media PC2 Nel Tempo")
} else {
print("Le colonne necessarie per l'analisi dei cluster non sono presenti nei dati combinati.")
}
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(prcomp)
# Install necessary packages
install.packages("readxl")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
install.packages("lubridate")
install.packages("cluster")
install.packages("factoextra")
install.packages("ggfortify")
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(prcomp)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
install.packages("lubridate")
install.packages("cluster")
install.packages("factoextra")
install.packages("readxl")
install.packages("lubridate")
install.packages("cluster")
install.packages("factoextra")
install.packages("readxl")
install.packages("tidyr")
install.packages("factoextra")
install.packages("readxl")
install.packages("readxl")
install.packages("cluster")
# Load necessary libraries
library(readxl)
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(prcomp)
# Install necessary packages
# install.packages("readxl")
# install.packages("ggplot2")
# install.packages("dplyr")
# install.packages("tidyr")
# install.packages("lubridate")
# install.packages("cluster")
# install.packages("factoextra")
# install.packages("ggfortify")
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(prcomp)
# Install necessary packages
# install.packages("readxl")
# install.packages("ggplot2")
# install.packages("dplyr")
# install.packages("tidyr")
# install.packages("lubridate")
# install.packages("cluster")
# install.packages("factoextra")
install.packages("ggfortify")
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(ggfortify)
# Load the dataset
file_path <- "dati.xlsx"
sheets <- excel_sheets(file_path)
# Loop through each sheet and perform the analysis
for (sheet in sheets) {
data <- read_excel(file_path, sheet = sheet)
# Select numerical columns for PCA and other analyses
numerical_data <- data %>%
select(contains("Qualità"), contains("Prezzo"), contains("Servizio Clienti"),
contains("Velocità di Consegna"), contains("Facilità d'Uso"),
contains("Assistenza Post-Vendita"), contains("Informazioni Ricevute"),
contains("Probabilità di Raccomandazione"), contains("Esperienza Complessiva"),
contains("Probabilità di Riacquisto"))
# Principal Component Analysis (PCA)
pca <- prcomp(numerical_data, scale. = TRUE)
# Plot PCA results
pca_plot <- autoplot(pca, data = numerical_data, colour = 'Esperienza Complessiva') +
ggtitle(paste("PCA of Customer Satisfaction Data - Sheet:", sheet))
print(pca_plot)
# Regression Analysis
regression_model <- lm(pca$x[,1] ~ data$Prezzo)
print(summary(regression_model))
# Plot regression results
regression_plot <- ggplot(data, aes(x = Prezzo, y = pca$x[,1])) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste("Regression Analysis: PCA1 vs Price - Sheet:", sheet))
print(regression_plot)
# Time Series Analysis
data$`Data di acquisto` <- as.Date(data$`Data di acquisto`)
monthly_data <- data %>%
group_by(month = floor_date(`Data di acquisto`, "month")) %>%
summarise(average_satisfaction = mean(`Esperienza Complessiva`))
# Plot time series
time_series_plot <- ggplot(monthly_data, aes(x = month, y = average_satisfaction)) +
geom_line() +
ggtitle(paste("Time Series Analysis of Customer Satisfaction - Sheet:", sheet))
print(time_series_plot)
# Cluster Analysis
set.seed(123)
kmeans_result <- kmeans(numerical_data, centers = 3)
# Plot cluster analysis results
cluster_plot <- fviz_cluster(kmeans_result, data = numerical_data) +
ggtitle(paste("Cluster Analysis of Customer Satisfaction - Sheet:", sheet))
print(cluster_plot)
}
# Install necessary packages
# install.packages("readxl")
# install.packages("ggplot2")
# install.packages("dplyr")
# install.packages("tidyr")
# install.packages("lubridate")
# install.packages("cluster")
# install.packages("factoextra")
# install.packages("ggfortify")
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(ggfortify)
# Load the dataset
file_path <- "dati.xlsx"
sheets <- excel_sheets(file_path)
# Loop through each sheet and perform the analysis
for (sheet in sheets) {
data <- read_excel(file_path, sheet = sheet)
# Clean column names by replacing spaces with underscores
colnames(data) <- gsub(" ", "_", colnames(data))
# Select numerical columns for PCA and other analyses
numerical_data <- data %>%
select(contains("Qualità"), contains("Prezzo"), contains("Servizio_Clienti"),
contains("Velocità_di_Consegna"), contains("Facilità_d'Uso"),
contains("Assistenza_Post-Vendita"), contains("Informazioni_Ricevute"),
contains("Probabilità_di_Raccomandazione"), contains("Esperienza_Complessiva"),
contains("Probabilità_di_Riacquisto"))
# Principal Component Analysis (PCA)
pca <- prcomp(numerical_data, scale. = TRUE)
# Plot PCA results
pca_plot <- autoplot(pca, data = numerical_data, colour = 'Esperienza_Complessiva') +
ggtitle(paste("PCA of Customer Satisfaction Data - Sheet:", sheet))
print(pca_plot)
# Regression Analysis
regression_model <- lm(pca$x[,1] ~ data$Prezzo)
print(summary(regression_model))
# Plot regression results
regression_plot <- ggplot(data, aes(x = Prezzo, y = pca$x[,1])) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste("Regression Analysis: PCA1 vs Price - Sheet:", sheet))
print(regression_plot)
# Time Series Analysis
data$Data_di_acquisto <- as.Date(data$Data_di_acquisto)
monthly_data <- data %>%
group_by(month = floor_date(Data_di_acquisto, "month")) %>%
summarise(average_satisfaction = mean(Esperienza_Complessiva))
# Plot time series
time_series_plot <- ggplot(monthly_data, aes(x = month, y = average_satisfaction)) +
geom_line() +
ggtitle(paste("Time Series Analysis of Customer Satisfaction - Sheet:", sheet))
print(time_series_plot)
# Cluster Analysis
set.seed(123)
kmeans_result <- kmeans(numerical_data, centers = 3)
# Plot cluster analysis results
cluster_plot <- fviz_cluster(kmeans_result, data = numerical_data) +
ggtitle(paste("Cluster Analysis of Customer Satisfaction - Sheet:", sheet))
print(cluster_plot)
}
# Install necessary packages
# install.packages("readxl")
# install.packages("ggplot2")
# install.packages("dplyr")
# install.packages("tidyr")
# install.packages("lubridate")
# install.packages("cluster")
# install.packages("factoextra")
# install.packages("ggfortify")
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(ggfortify)
# Load the dataset
file_path <- "dati.xlsx"
sheets <- excel_sheets(file_path)
# Loop through each sheet and perform the analysis
for (sheet in sheets) {
data <- read_excel(file_path, sheet = sheet)
# Clean column names by replacing spaces with underscores
colnames(data) <- gsub(" ", "_", colnames(data))
# Select numerical columns for PCA and other analyses
numerical_data <- data %>%
select(contains("Qualità"), contains("Prezzo"), contains("Servizio_Clienti"),
contains("Velocità_di_Consegna"), contains("Facilità_d'Uso"),
contains("Assistenza_Post-Vendita"), contains("Informazioni_Ricevute"),
contains("Probabilità_di_Raccomandazione"), contains("Esperienza_Complessiva"),
contains("Probabilità_di_Riacquisto"))
# Ensure all columns are numeric
numerical_data <- numerical_data %>% mutate_all(as.numeric)
# Principal Component Analysis (PCA)
pca <- prcomp(numerical_data, scale. = TRUE)
# Plot PCA results
pca_plot <- autoplot(pca, data = numerical_data, colour = 'Esperienza_Complessiva') +
ggtitle(paste("PCA of Customer Satisfaction Data - Sheet:", sheet))
print(pca_plot)
# Regression Analysis
regression_model <- lm(pca$x[,1] ~ data$Prezzo)
print(summary(regression_model))
# Plot regression results
regression_plot <- ggplot(data, aes(x = Prezzo, y = pca$x[,1])) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste("Regression Analysis: PCA1 vs Price - Sheet:", sheet))
print(regression_plot)
# Time Series Analysis
data$Data_di_acquisto <- as.Date(data$Data_di_acquisto)
monthly_data <- data %>%
group_by(month = floor_date(Data_di_acquisto, "month")) %>%
summarise(average_satisfaction = mean(Esperienza_Complessiva, na.rm = TRUE))
# Plot time series
time_series_plot <- ggplot(monthly_data, aes(x = month, y = average_satisfaction)) +
geom_line() +
ggtitle(paste("Time Series Analysis of Customer Satisfaction - Sheet:", sheet))
print(time_series_plot)
# Cluster Analysis
set.seed(123)
kmeans_result <- kmeans(numerical_data, centers = 3)
# Plot cluster analysis results
cluster_plot <- fviz_cluster(kmeans_result, data = numerical_data) +
ggtitle(paste("Cluster Analysis of Customer Satisfaction - Sheet:", sheet))
print(cluster_plot)
}
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(ggfortify)
file_path <- "dati.xlsx"
sheets <- excel_sheets(file_path)
convert_to_numeric <- function(df) {
numeric_columns <- names(df)[sapply(df, is.character)]
df[numeric_columns] <- lapply(df[numeric_columns], function(x) as.numeric(as.character(x)))
return(df)
}
for (sheet in sheets) {
data <- read_excel(file_path, sheet = sheet)
colnames(data) <- gsub(" ", "_", colnames(data))
numerical_data <- data %>%
select(contains("Qualità"), contains("Prezzo"), contains("Servizio_Clienti"),
contains("Velocità_di_Consegna"), contains("Facilità_d'Uso"),
contains("Assistenza_Post-Vendita"), contains("Informazioni_Ricevute"),
contains("Probabilità_di_Raccomandazione"), contains("Esperienza_Complessiva"),
contains("Probabilità_di_Riacquisto"))
numerical_data <- numerical_data %>% mutate_all(as.numeric)
pca <- prcomp(numerical_data, scale. = TRUE)
pca_plot <- autoplot(pca, data = numerical_data, colour = 'Esperienza_Complessiva') +
ggtitle(paste("PCA of Customer Satisfaction Data - Sheet:", sheet))
print(pca_plot)
regression_model <- lm(pca$x[,1] ~ data$Prezzo)
print(summary(regression_model))
regression_plot <- ggplot(data, aes(x = Prezzo, y = pca$x[,1])) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste("Regression Analysis: PCA1 vs Price - Sheet:", sheet))
print(regression_plot)
data$Data_di_acquisto <- as.Date(data$Data_di_acquisto)
monthly_data <- data %>%
group_by(month = floor_date(Data_di_acquisto, "month")) %>%
summarise(average_satisfaction = mean(Esperienza_Complessiva, na.rm = TRUE))
time_series_plot <- ggplot(monthly_data, aes(x = month, y = average_satisfaction)) +
geom_line() +
ggtitle(paste("Time Series Analysis of Customer Satisfaction - Sheet:", sheet))
print(time_series_plot)
set.seed(123)
kmeans_result <- kmeans(numerical_data, centers = 3)
cluster_plot <- fviz_cluster(kmeans_result, data = numerical_data) +
ggtitle(paste("Cluster Analysis of Customer Satisfaction - Sheet:", sheet))
print(cluster_plot)
}
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(ggfortify)
file_path <- "dati.xlsx"
sheets <- excel_sheets(file_path)
convert_to_numeric <- function(df) {
numeric_columns <- names(df)[sapply(df, is.character)]
df[numeric_columns] <- lapply(df[numeric_columns], function(x) as.numeric(as.character(x)))
return(df)
}
for (sheet in sheets) {
data <- read_excel(file_path, sheet = sheet)
colnames(data) <- gsub(" ", "_", colnames(data))
numerical_data <- data %>%
select(contains("Qualità"), contains("Prezzo"), contains("Servizio_Clienti"),
contains("Velocità_di_Consegna"), contains("Facilità_d'Uso"),
contains("Assistenza_Post-Vendita"), contains("Informazioni_Ricevute"),
contains("Probabilità_di_Raccomandazione"), contains("Esperienza_Complessiva"),
contains("Probabilità_di_Riacquisto")) %>%
mutate_all(as.numeric)
pca <- prcomp(numerical_data, scale. = TRUE)
pca_plot <- autoplot(pca, data = numerical_data, colour = 'Esperienza_Complessiva') +
ggtitle(paste("PCA of Customer Satisfaction Data - Sheet:", sheet))
print(pca_plot)
regression_model <- lm(pca$x[,1] ~ numerical_data$Prezzo)
print(summary(regression_model))
regression_plot <- ggplot(numerical_data, aes(x = Prezzo, y = pca$x[,1])) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste("Regression Analysis: PCA1 vs Price - Sheet:", sheet))
print(regression_plot)
data$Data_di_acquisto <- as.Date(data$Data_di_acquisto)
monthly_data <- data %>%
group_by(month = floor_date(Data_di_acquisto, "month")) %>%
summarise(average_satisfaction = mean(Esperienza_Complessiva, na.rm = TRUE))
time_series_plot <- ggplot(monthly_data, aes(x = month, y = average_satisfaction)) +
geom_line() +
ggtitle(paste("Time Series Analysis of Customer Satisfaction - Sheet:", sheet))
print(time_series_plot)
set.seed(123)
kmeans_result <- kmeans(numerical_data, centers = 3)
cluster_plot <- fviz_cluster(kmeans_result, data = numerical_data) +
ggtitle(paste("Cluster Analysis of Customer Satisfaction - Sheet:", sheet))
print(cluster_plot)
}
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(ggfortify)
file_path <- "dati.xlsx"
sheets <- excel_sheets(file_path)
convert_to_numeric <- function(df) {
numeric_columns <- names(df)[sapply(df, is.character)]
df[numeric_columns] <- lapply(df[numeric_columns], function(x) as.numeric(as.character(x)))
return(df)
}
for (sheet in sheets) {
data <- read_excel(file_path, sheet = sheet)
colnames(data) <- gsub(" ", "_", colnames(data))
numerical_data <- data %>%
select(contains("Qualità"), contains("Prezzo"), contains("Servizio_Clienti"),
contains("Velocità_di_Consegna"), contains("Facilità_d'Uso"),
contains("Assistenza_Post-Vendita"), contains("Informazioni_Ricevute"),
contains("Probabilità_di_Raccomandazione"), contains("Esperienza_Complessiva"),
contains("Probabilità_di_Riacquisto")) %>%
mutate_all(as.numeric)
pca <- prcomp(numerical_data, scale. = TRUE)
pca_plot <- autoplot(pca, data = numerical_data, colour = 'Esperienza_Complessiva') +
ggtitle(paste("PCA of Customer Satisfaction Data - Sheet:", sheet))
print(pca_plot)
regression_model <- lm(pca$x[,1] ~ numerical_data$Prezzo)
print(summary(regression_model))
regression_plot <- ggplot(numerical_data, aes(x = Prezzo, y = pca$x[,1])) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste("Regression Analysis: PCA1 vs Price - Sheet:", sheet))
print(regression_plot)
data$Data_di_acquisto <- as.Date(data$Data_di_acquisto)
monthly_data <- data %>%
group_by(month = floor_date(Data_di_acquisto, "month")) %>%
summarise(average_satisfaction = mean(Esperienza_Complessiva, na.rm = TRUE))
time_series_plot <- ggplot(monthly_data, aes(x = month, y = average_satisfaction)) +
geom_line() +
ggtitle(paste("Time Series Analysis of Customer Satisfaction - Sheet:", sheet))
print(time_series_plot)
set.seed(123)
kmeans_result <- kmeans(numerical_data, centers = 3)
cluster_plot <- fviz_cluster(kmeans_result, data = numerical_data) +
ggtitle(paste("Cluster Analysis of Customer Satisfaction - Sheet:", sheet))
print(cluster_plot)
}
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(cluster)
library(factoextra)
library(ggfortify)
file_path <- "dati.xlsx"
sheets <- excel_sheets(file_path)
convert_to_numeric <- function(df) {
numeric_columns <- names(df)[sapply(df, is.character)]
df[numeric_columns] <- lapply(df[numeric_columns], function(x) as.numeric(as.character(x)))
return(df)
}
for (sheet in sheets) {
data <- read_excel(file_path, sheet = sheet)
colnames(data) <- gsub(" ", "_", colnames(data))
numerical_data <- data %>%
select(contains("Qualità"), contains("Prezzo"), contains("Servizio_Clienti"),
contains("Velocità_di_Consegna"), contains("Facilità_d'Uso"),
contains("Assistenza_Post-Vendita"), contains("Informazioni_Ricevute"),
contains("Probabilità_di_Raccomandazione"), contains("Esperienza_Complessiva"),
contains("Probabilità_di_Riacquisto")) %>%
mutate_all(as.numeric)
if ("Prezzo" %in% colnames(numerical_data)) {
pca <- prcomp(numerical_data, scale. = TRUE)
pca_plot <- autoplot(pca, data = numerical_data, colour = 'Esperienza_Complessiva') +
ggtitle(paste("PCA of Customer Satisfaction Data - Sheet:", sheet))
print(pca_plot)
regression_model <- lm(pca$x[,1] ~ numerical_data$Prezzo)
print(summary(regression_model))
regression_plot <- ggplot(numerical_data, aes(x = Prezzo, y = pca$x[,1])) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste("Regression Analysis: PCA1 vs Price - Sheet:", sheet))
print(regression_plot)
} else {
print(paste("Sheet", sheet, "does not contain the 'Prezzo' column. Skipping regression analysis."))
}
if ("Data_di_acquisto" %in% colnames(data)) {
data$Data_di_acquisto <- as.Date(data$Data_di_acquisto)
monthly_data <- data %>%
group_by(month = floor_date(Data_di_acquisto, "month")) %>%
summarise(average_satisfaction = mean(Esperienza_Complessiva, na.rm = TRUE))
time_series_plot <- ggplot(monthly_data, aes(x = month, y = average_satisfaction)) +
geom_line() +
ggtitle(paste("Time Series Analysis of Customer Satisfaction - Sheet:", sheet))
print(time_series_plot)
} else {
print(paste("Sheet", sheet, "does not contain the 'Data di acquisto' column. Skipping time series analysis."))
}
set.seed(123)
kmeans_result <- kmeans(numerical_data, centers = 3)
cluster_plot <- fviz_cluster(kmeans_result, data = numerical_data) +
ggtitle(paste("Cluster Analysis of Customer Satisfaction - Sheet:", sheet))
print(cluster_plot)
}
